services:

  # Monitoring & Updates
  node-exporter:
    image: prom/node-exporter:v1.8.1
    container_name: node-exporter
    restart: unless-stopped
    ports:
      - 9100:9100
    command:
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    environment:
      TZ: $TZ

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.49.1
    container_name: cadvisor
    restart: unless-stopped
    ports:
      - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    environment:
      TZ: $TZ

  smartctl:
    image: matusnovak/prometheus-smartctl:v2.3.0
    container_name: smartctl
    restart: unless-stopped
    ports:
      - 9902:9902
    privileged: true

  nut:
    image: instantlinux/nut-upsd:2.8.0-r4
    container_name: nut
    restart: unless-stopped
    environment:
      API_USER: upsmon
      API_PASSWORD: $NUT_PASSWORD
      DESCRIPTION: CyberPower 1500VA UPS
      SERIAL: $NUT_SERIAL
    ports:
      - 3493:3493
    privileged: true

  heartbeat:
    build: $OPDIR/dockerfiles/heartbeat
    container_name: heartbeat
    restart: unless-stopped
    environment:
      ENDPOINT_URL: https://status.wasabipesto.com/api/push/f774dtOPxN

  # Media
  rtorrent:
    image: crazymax/rtorrent-rutorrent:4.2.9-0.9.8-0.13.8
    container_name: rtorrent
    restart: unless-stopped
    ports:
      - 8000:8000   # XMLRPC (*arr)
      - 8085:8080   # RUTORRENT (web)
      - 50000:50000 # PEERING
    volumes:
      - $OPDIR/rtorrent/data/geoip:/data/geoip
      - $OPDIR/rtorrent/data/rtorrent:/data/rtorrent
      - $OPDIR/rtorrent/data/rutorrent:/data/rutorrent
      - $DATADIR/Seeds:/data/Seeds
    stop_grace_period: 15s
    environment:
      TZ: $TZ
      PUID: $PUID
      PGID: $PGID

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:1.18.0
    container_name: prowlarr
    hostname: prowlarr
    restart: unless-stopped
    ports:
      - 9696:9696
    volumes:
      - $OPDIR/prowlarr:/config
    environment:
      TZ: $TZ
      PUID: $PUID
      PGID: $PGID

  sonarr:
    image: lscr.io/linuxserver/sonarr:4.0.5
    container_name: sonarr
    hostname: sonarr
    restart: unless-stopped
    ports:
      - 8989:8989
    volumes:
      - $OPDIR/sonarr:/config
      - $DATADIR:/data
    environment:
      TZ: $TZ
      PUID: $PUID
      PGID: $PGID

  radarr:
    image: lscr.io/linuxserver/radarr:5.6.0
    container_name: radarr
    hostname: radarr
    restart: unless-stopped
    ports:
      - 7878:7878
    volumes:
      - $OPDIR/radarr:/config
      - $DATADIR:/data
    environment:
      TZ: $TZ
      PUID: $PUID
      PGID: $PGID

  readarr:
    image: lscr.io/linuxserver/readarr:0.3.27-develop
    container_name: readarr
    hostname: readarr
    restart: unless-stopped
    ports:
      - 8787:8787
    volumes:
      - $OPDIR/readarr:/config
      - $DATADIR:/data
    environment:
      TZ: $TZ
      PUID: $PUID
      PGID: $PGID

  bazarr:
    image: lscr.io/linuxserver/bazarr:1.4.2
    container_name: bazarr
    hostname: bazarr
    restart: unless-stopped
    ports:
      - 6767:6767
    volumes:
      - $OPDIR/bazarr:/config
      - $DATADIR:/data
    environment:
      TZ: $TZ
      PUID: $PUID
      PGID: $PGID

  calibre-app:
    image: lscr.io/linuxserver/calibre:7.0.0
    container_name: calibre-app
    hostname: calibre-app
    restart: unless-stopped
    security_opt:
      - seccomp:unconfined # https://github.com/linuxserver/docker-calibre/issues/97
    ports:
      - 8079:8080
      - 8081:8081
    volumes:
      - $OPDIR/calibre-app:/config
      - $DATADIR:/data
    environment:
      TZ: $TZ
      PUID: $PUID
      PGID: $PGID

  calibre-web:
    image: ghcr.io/linuxserver/calibre-web:0.6.20
    container_name: calibre-web
    hostname: calibre-web
    restart: unless-stopped
    ports:
      - 8083:8083
    volumes:
      - $OPDIR/calibre-web:/config
      - $OPDIR/calibre-web/custom-cont-init.d:/custom-cont-init.d:ro
      - $DATADIR/Books:/data/Books
    environment:
      TZ: $TZ
      PUID: $PUID
      PGID: $PGID
      DOCKER_MODS: linuxserver/mods:universal-calibre

  nextcloud:
    image: lscr.io/linuxserver/nextcloud:29.0.2
    container_name: nextcloud
    hostname: nextcloud
    restart: unless-stopped
    volumes:
      - $OPDIR/nextcloud/config:/config
      - $OPDIR/nextcloud/data:/data
      - $DATADIR:/mnt/celebrimbor
      - $OPDIR/syncthing/data:/mnt/syncthing
    environment:
      TZ: $TZ
      PUID: $PUID
      PGID: $PGID
    ports:
      - 4431:80

  syncthing:
    image: syncthing/syncthing:1.27
    container_name: syncthing
    hostname: syncthing
    restart: unless-stopped
    ports:
      - 8384:8384
      - 22000:22000/tcp # TCP file transfers
      - 22000:22000/udp # QUIC file transfers
      - 21027:21027/udp # Receive local discovery broadcasts
    volumes:
      - $OPDIR/syncthing:/var/syncthing
      - $DATADIR/Photos:/mnt/photos
    environment:
      TZ: $TZ

  # Immich
  immich-server:
    container_name: immich-server
    restart: unless-stopped
    image: ghcr.io/immich-app/immich-server:v1.103.1
    command: ['start.sh', 'immich']
    volumes:
      - $DATADIR/immich:/usr/src/app/upload
      - $DATADIR/Photos:/mnt/data/Photos
      - /etc/localtime:/etc/localtime:ro
    environment:
      TZ: $TZ
      IMMICH_METRICS: true
      DB_HOSTNAME: immich-postgres
      DB_USERNAME: immich
      DB_PASSWORD: $IMMICH_PG_PASSWORD
      DB_DATABASE_NAME: immich
      REDIS_HOSTNAME: immich-redis
    ports:
      - 2283:3001
    depends_on:
      - immich-redis
      - immich-postgres

  immich-microservices:
    container_name: immich-microservices
    restart: unless-stopped
    image: ghcr.io/immich-app/immich-server:v1.103.1
    command: ['start.sh', 'microservices']
    volumes:
      - $DATADIR/immich:/usr/src/app/upload
      - $DATADIR/Photos:/mnt/data/Photos
      - /etc/localtime:/etc/localtime:ro
    environment:
      TZ: $TZ
      IMMICH_METRICS: true
      DB_HOSTNAME: immich-postgres
      DB_USERNAME: immich
      DB_PASSWORD: $IMMICH_PG_PASSWORD
      DB_DATABASE_NAME: immich
      REDIS_HOSTNAME: immich-redis
    depends_on:
      - immich-redis
      - immich-postgres

  immich-machine-learning:
    container_name: immich-machine-learning
    restart: unless-stopped
    image: ghcr.io/immich-app/immich-machine-learning:v1.103.1
    volumes:
      - $OPDIR/immich-model-cache:/cache

  immich-redis:
    container_name: immich-redis
    restart: unless-stopped
    image: registry.hub.docker.com/library/redis:6.2

  immich-postgres:
    container_name: immich-postgres
    restart: unless-stopped
    image: registry.hub.docker.com/tensorchord/pgvecto-rs:pg14-v0.2.0
    environment:
      POSTGRES_PASSWORD: $IMMICH_PG_PASSWORD
      POSTGRES_USER: immich
      POSTGRES_DB: immich
    volumes:
      - $OPDIR/immich-postgres:/var/lib/postgresql/data

  # Other
  homeassistant:
    image: lscr.io/linuxserver/homeassistant:2024.6.1
    container_name: homeassistant
    hostname: homeassistant
    restart: unless-stopped
    privileged: true
    network_mode: host
    ports:
      - 8123:8123
    volumes:
      - $OPDIR/homeassistant:/config
      - /etc/localtime:/etc/localtime:ro
    environment:
      TZ: $TZ
      PUID: $PUID
      PGID: $PGID
      DOCKER_MODS: linuxserver/mods:universal-package-install
      INSTALL_PACKAGES: nmap # for nmap device tracker

  code-server:
    image: lscr.io/linuxserver/code-server:4.89.1-ls215
    container_name: code-server
    hostname: code-server
    restart: unless-stopped
    ports:
      - 8443:8443
    volumes:
      - $OPDIR/code:/config
      - $OPDIR:/opt
    environment:
      TZ: $TZ
      PUID: $PUID
      PGID: $PGID
      SUDO_PASSWORD: $CODE_PASSWORD
      DOCKER_MODS: linuxserver/mods:code-server-python3
