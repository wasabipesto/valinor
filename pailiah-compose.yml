version: "3"

services:
  # Networking & Static Sites
  nginx:
    image: lscr.io/linuxserver/nginx:latest
    container_name: nginx
    hostname: nginx
    restart: unless-stopped
    ports:
      - 4080:80
      - 4443:443
    volumes:
      - $OPDIR/nginx:/config
    environment:
      TZ: $TZ
      PUID: $PUID
      PGID: $PGID

  # Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - 9090:9090
    volumes:
      - $OPDIR/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - $OPDIR/prometheus/data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=1y'
    environment:
      TZ: $TZ
      PUID: $PUID # does this work?
      PGID: $PGID

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    hostname: node-exporter
    restart: unless-stopped
    ports:
      - 9100:9100
    command:
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    environment:
      TZ: $TZ

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    hostname: cadvisor
    restart: unless-stopped
    ports:
      - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    environment:
      TZ: $TZ

  ping_exporter:
    image: czerwonk/ping_exporter:latest
    container_name: ping_exporter
    restart: unless-stopped
    ports:
      - 9427:9427
    volumes:
      - $OPDIR/ping_exporter:/config:ro

  nginx-exporter:
    image: quay.io/martinhelmich/prometheus-nginxlog-exporter:v1
    container_name: nginx-exporter
    restart: unless-stopped
    ports:
      - 4040:4040
    volumes:
      - $OPDIR/nginx/log/nginx:/mnt/nginxlogs:ro
      - $OPDIR/prometheus/prometheus-nginxlog-exporter.yml:/mnt/prometheus-nginxlog-exporter.yml:ro
    command: -config-file /mnt/prometheus-nginxlog-exporter.yml

  loki:
    image: grafana/loki
    container_name: loki
    hostname: loki
    restart: unless-stopped
    ports:
      - 3100:3100
    environment:
      TZ: $TZ
    command: -config.file=/etc/loki/local-config.yaml

  grafana:
    image: grafana/grafana-oss:main
    container_name: grafana
    hostname: grafana
    restart: unless-stopped
    user: $PUID:$PGID
    ports:
      - 3000:3000
    volumes:
      - $OPDIR/grafana:/var/lib/grafana
    environment:
      TZ: $TZ
      GF_PATHS_CONFIG: /var/lib/grafana/grafana.ini

  # Media
  owncast:
    image: gabekangas/owncast:latest
    container_name: owncast
    restart: unless-stopped
    ports:
      - 8084:8080
      - 1935:1935 # RSTP is not exposed to internet, just tailscale
    volumes:
      - $OPDIR/owncast:/app/data
    environment:
      TZ: $TZ
      PUID: $PUID
      PGID: $PGID

  tautulli:
    image: lscr.io/linuxserver/tautulli:latest
    container_name: tautulli
    hostname: tautulli
    restart: unless-stopped
    ports:
      - 8181:8181
    volumes:
      - $OPDIR/tautulli:/config
    environment:
      TZ: $TZ
      PUID: $PUID
      PGID: $PGID

  overseerr:
    image: sctx/overseerr:latest
    container_name: overseerr
    restart: unless-stopped
    ports:
      - 5055:5055
    volumes:
      - $OPDIR/overseerr:/app/config
    environment:
      TZ: $TZ
      PUID: $PUID
      PGID: $PGID

  syncthing:
    image: syncthing/syncthing:latest
    container_name: syncthing
    hostname: syncthing
    restart: unless-stopped
    ports:
      - 8384:8384
      - 22000:22000/tcp # TCP file transfers
      - 22000:22000/udp # QUIC file transfers
      - 21027:21027/udp # Receive local discovery broadcasts
    volumes:
      - $OPDIR/syncthing:/var/syncthing
    environment:
      TZ: $TZ
      PUID: $PUID
      PGID: $PGID

  freshrss:
    image: freshrss/freshrss:latest
    container_name: freshrss
    hostname: freshrss
    restart: unless-stopped
    ports:
      - 8524:80
    volumes:
      - $OPDIR/freshrss/data:/var/www/FreshRSS/data
      - $OPDIR/freshrss/extensions:/var/www/FreshRSS/extensions
    environment:
      TZ: $TZ
      PUID: $PUID
      PGID: $PGID
      CRON_MIN: 13,43

  rss-bridge:
    image: rssbridge/rss-bridge:latest
    container_name: rss-bridge
    hostname: rss-bridge
    restart: unless-stopped
    ports:
      - 3060:80
    volumes:
      - $OPDIR/freshrss/bridge:/config
    environment:
      TZ: $TZ
      PUID: $PUID
      PGID: $PGID

  # Games
  foundry-kirkwall:
    image: felddy/foundryvtt:release
    container_name: foundry-kirkwall
    hostname: foundry-kirkwall
    restart: unless-stopped
    ports:
      - 30000:30000
    volumes:
      - $OPDIR/kirkwall:/data
    environment:
      TIMEZONE: $TZ
      FOUNDRY_UID: $PUID
      FOUNDRY_GID: $PGID
      FOUNDRY_HOSTNAME: kirkwall.$DOMAIN
    env_file: $OPDIR/kirkwall/config.env

  # Other
  code-server:
    image: lscr.io/linuxserver/code-server:latest
    container_name: code-server
    hostname: code-server
    restart: unless-stopped
    ports:
      - 8443:8443
      - 8788:8788 # for node/wrangler previews
    volumes:
      - $OPDIR/code:/config
      - $OPDIR:/opt
      - $OPDIR/code/custom-cont-init.d:/custom-cont-init.d:ro
    environment:
      TZ: $TZ
      PUID: $PUID
      PGID: $PGID
      SUDO_PASSWORD: $CODE_PASSWORD

  # Nice
  nice-backend-prod:
    build: $OPDIR/nice-backend-v
    container_name: nice-backend-prod
    restart: unless-stopped
    ports:
      - 3069:3000
    environment:
      NODE_ENV: production

  nice-backend-dev:
    build: $OPDIR/nice-backend-v
    container_name: nice-backend-dev
    restart: unless-stopped
    ports:
      - 3068:3000
    environment:
      NODE_ENV: development

  nice-postgres:
    image: postgres:15
    container_name: nice-postgres
    hostname: nice-postgres
    restart: unless-stopped
    ports:
      - 5432:5432
    volumes:
      - $OPDIR/nice-postgres:/var/lib/postgresql
    environment:
      TZ: $TZ
      POSTGRES_USER: nice
      POSTGRES_PASSWORD: $NICE_POSTGRES_PASSWORD
  
  nice-pgbackups:
    image: prodrigestivill/postgres-backup-local
    container_name: nice-pgbackups
    restart: always
    user: $PUID:$PGID
    volumes:
      - $OPDIR/nice-postgres-backups:/backups
    depends_on:
      - nice-postgres
    environment:
      POSTGRES_HOST: nice-postgres
      POSTGRES_DB: nice
      POSTGRES_USER: nice
      POSTGRES_PASSWORD: $NICE_POSTGRES_PASSWORD
      POSTGRES_EXTRA_OPTS: -Z6
      SCHEDULE: "@daily"
      BACKUP_KEEP_DAYS: 10
      BACKUP_KEEP_WEEKS: 10
      BACKUP_KEEP_MONTHS: 10
      HEALTHCHECK_PORT: 8080
  
  nice-pgmonitor:
    image: quay.io/prometheuscommunity/postgres-exporter
    container_name: nice-pgmonitor
    restart: always
    depends_on:
      - nice-postgres
    ports:
      - 9187:9187
    environment:
      DATA_SOURCE_NAME: postgresql://nice:${NICE_POSTGRES_PASSWORD}@nice-postgres:5432/nice?sslmode=disable
