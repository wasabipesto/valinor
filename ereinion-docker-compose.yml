version: "3"

networks:
  wasabi-overlay:
    external: true

services:

  # Networking
  traefik:
    image: traefik:v2.6
    container_name: traefik
    hostname: traefik
    restart: unless-stopped
    networks:
      - wasabi-overlay
    ports:
      - 80:80
      - 443:443
      - 8448:8448
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - $OPDIR/traefik:/etc/traefik
    labels:
      - traefik.enable=true
      - traefik.http.routers.dashboard.entrypoints=websecure
      - traefik.http.routers.dashboard.rule=Host(`traefik.$DOMAIN`)
      - traefik.http.routers.dashboard.service=api@internal
      - traefik.http.routers.dashboard.middlewares=authelia@file
    environment:
      - TZ=$TZ
      - PUID=$PUID
      - PGID=$PGID
      - CF_DNS_API_TOKEN=$CF_DNS_API_TOKEN

  authelia:
    image: authelia/authelia
    container_name: authelia
    hostname: authelia
    restart: unless-stopped
    networks:
      - wasabi-overlay
    expose:
      - 9091
    volumes:
      - /opt/authelia:/config
    labels:
      - traefik.enable=true
      - traefik.http.routers.authelia.tls=true
      - traefik.http.routers.authelia.entrypoints=websecure
      - traefik.http.routers.authelia.rule=Host(`auth.$DOMAIN`)
    environment:
      - TZ=$TZ
      - PUID=$PUID
      - PGID=$PGID

  nginx:
    image: lscr.io/linuxserver/nginx
    container_name: nginx
    hostname: nginx
    restart: unless-stopped
    networks:
      - wasabi-overlay
    expose:
      - 443
    volumes:
      - $OPDIR/nginx:/config
    labels:
      - traefik.enable=true
      - traefik.http.routers.nginx.entrypoints=websecure
      - traefik.http.routers.nginx.rule=Host(`$DOMAIN`)
    environment:
      - TZ=$TZ
      - PUID=$PUID
      - PGID=$PGID

  # Monitoring & Updates
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    hostname: watchtower-ereinion
    restart: unless-stopped
    networks:
      - wasabi-overlay
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - TZ=$TZ
      - WATCHTOWER_NOTIFICATIONS=shoutrrr
      - WATCHTOWER_NOTIFICATION_URL=$WATCHTOWER_NOTIFICATION_URL
      - WATCHTOWER_NOTIFICATIONS_LEVEL=info

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    hostname: prometheus
    restart: unless-stopped
    networks:
      - wasabi-overlay
    expose:
      - 9090
    volumes:
      - $OPDIR/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - $OPDIR/prometheus/data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    labels:
      - traefik.enable=true
      - traefik.http.routers.prometheus.entrypoints=websecure
      - traefik.http.routers.prometheus.rule=Host(`prometheus.$DOMAIN`)
      - traefik.http.routers.prometheus.middlewares=authelia@file
    environment:
      - TZ=$TZ
      - PUID=$PUID
      - PGID=$PGID

  node-exporter:
    image: prom/node-exporter
    container_name: node-ereinion
    hostname: node-ereinion
    restart: unless-stopped
    networks:
      - wasabi-overlay
    expose:
      - 9100
    command:
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    environment:
      - TZ=$TZ
      - PUID=$PUID
      - PGID=$PGID

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    container_name: cadvisor-ereinion
    hostname: cadvistor-ereinion
    restart: unless-stopped
    networks:
      - wasabi-overlay
    expose:
      - 8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    environment:
      - TZ=$TZ

  grafana:
    image: grafana/grafana-oss:main
    container_name: grafana
    hostname: grafana
    restart: unless-stopped
    user: $PUID:$PGID
    networks:
      - wasabi-overlay
    expose:
      - 3000
    volumes:
      - $OPDIR/grafana:/var/lib/grafana
    labels:
      - traefik.enable=true
      - traefik.http.routers.grafana.entrypoints=websecure
      - traefik.http.routers.grafana.rule=Host(`grafana.$DOMAIN`)
      - traefik.http.routers.grafana.middlewares=authelia@file
    environment:
      - TZ=$TZ
      - GF_PATHS_CONFIG=/var/lib/grafana/grafana.ini

  # Communication
  protonmail:
    image: shenxn/protonmail-bridge
    container_name: protonmail
    hostname: protonmail
    restart: unless-stopped
    networks:
      - wasabi-overlay
    expose:
      - 25
      - 143
    volumes:
      - $OPDIR/protonmail:/root
    environment:
      - TZ=$TZ
      - PUID=$PUID
      - PGID=$PGID

  synapse:
    image: docker.io/matrixdotorg/synapse:latest
    container_name: synapse
    hostname: synapse
    restart: unless-stopped
    networks:
      - wasabi-overlay
    expose:
      - 8008
    volumes:
      - $OPDIR/synapse:/data
    labels:
      - traefik.enable=true
      - traefik.http.routers.synapse.entrypoints=websecure
      - traefik.http.routers.synapse.rule=Host(`synapse.$DOMAIN`)
      - traefik.http.routers.synapse.service=synapse
      - traefik.http.services.synapse.loadbalancer.server.port=8008
    environment:
      - TZ=$TZ
      - UID=$PUID
      - GID=$PGID
      - SYNAPSE_CONFIG_PATH=/data/homeserver.yaml
    depends_on:
      - postgres-matrix

  postgres-matrix:
    image: docker.io/postgres:12-alpine
    container_name: postgres-synapse
    restart: unless-stopped
    user: $PUID:$PGID # postgres will not init database as 1000:1000
    networks:
      - wasabi-overlay
    expose:
      - 5432
    environment:
      - POSTGRES_USER=synapse
      - POSTGRES_PASSWORD=$MATRIX_POSTGRES_PASSWORD
      # https://matrix-org.github.io/synapse/latest/postgres.html#set-up-database
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - $OPDIR/postgres-matrix:/var/lib/postgresql/data

  element:
    image: vectorim/element-web
    container_name: element
    hostname: element
    restart: unless-stopped
    networks:
      - wasabi-overlay
    expose:
      - 80
    volumes:
      - $OPDIR/element/config.json:/app/config.json:ro
    labels:
      - traefik.enable=true
      - traefik.http.routers.element.entrypoints=websecure
      - traefik.http.routers.element.rule=Host(`element.$DOMAIN`)
    environment:
      - TZ=$TZ

  heisenbridge:
    image: hif1/heisenbridge
    container_name: heisenbridge
    restart: unless-stopped
    networks:
      - wasabi-overlay
    expose:
      - 9898
    volumes:
      - $OPDIR/synapse/heisenbridge:/data
    command: -v -c /data/heisenbridge.yaml http://synapse:8008

  mx-puppet-groupme:
    build: https://gitlab.com/robintown/mx-puppet-groupme.git#main
    container_name: mx-puppet-groupme
    restart: unless-stopped
    networks:
      - wasabi-overlay
    expose:
      - 8437
    volumes:
      - $OPDIR/synapse/mx-puppet-groupme:/data

  mx-puppet-discord:
    # build: git@github.com:matrix-discord/mx-puppet-discord.git
    # forked due to https://github.com/matrix-discord/mx-puppet-discord/issues/201
    build: $BUILDDIR/mx-puppet-discord
    container_name: mx-puppet-discord
    restart: unless-stopped
    networks:
      - wasabi-overlay
    expose:
      - 8434
    volumes:
      - $OPDIR/synapse/mx-puppet-discord:/data

  # Backup
  syncthing:
    image: syncthing/syncthing
    container_name: syncthing
    hostname: syncthing
    restart: unless-stopped
    networks:
      - wasabi-overlay
    expose:
      - 8384
    volumes:
      - $OPDIR/syncthing:/var/syncthing
    labels:
      - traefik.enable=true
      - traefik.http.routers.syncthing.entrypoints=websecure
      - traefik.http.routers.syncthing.rule=Host(`syncthing.$DOMAIN`)
      - traefik.http.routers.syncthing.middlewares=authelia@file
    environment:
      - TZ=$TZ
      - PUID=$PUID
      - PGID=$PGID

  # D&D
  wikijs:
    image: ghcr.io/requarks/wiki:2
    container_name: wikijs
    hostname: wikijs
    restart: unless-stopped
    user: $PUID:$PGID
    networks:
      - wasabi-overlay
    expose:
      - 3000
    volumes:
      - $OPDIR/wikijs/config.yml:/wiki/config.yml
      - $OPDIR/wikijs/backup:/wiki/backup
    labels:
      - traefik.enable=true
      - traefik.http.routers.wikijs.entrypoints=websecure
      - traefik.http.routers.wikijs.rule=Host(`wiki.$DOMAIN`)
    environment:
      - TZ=$TZ
      - CONFIG_FILE=/wiki/config.yml

  postgres-wikijs:
    image: postgres:11-alpine
    container_name: postgres-wikijs
    hostname: postgres-wikijs
    restart: unless-stopped
    user: $PUID:$PGID # postgres will not init database as 1000:1000
    networks:
      - wasabi-overlay
    expose:
      - 5432
    volumes:
      - $OPDIR/postgres-wikijs:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=wiki
      - POSTGRES_PASSWORD=$WIKIJS_POSTGRES_PASSWORD
      - POSTGRES_USER=wikijs

  foundry-kirkwall:
    image: felddy/foundryvtt:release
    container_name: foundry-kirkwall
    hostname: foundry-kirkwall
    restart: unless-stopped
    networks:
      - wasabi-overlay
    expose:
      - 30000
    volumes:
      - $OPDIR/kirkwall:/data
    labels:
      - traefik.enable=true
      - traefik.http.routers.kirkwall.entrypoints=websecure
      - traefik.http.routers.kirkwall.rule=Host(`kirkwall.$DOMAIN`)
    environment:
      - TIMEZONE=$TZ
      - FOUNDRY_UID=$PUID
      - FOUNDRY_GID=$PGID
      - FOUNDRY_PASSWORD=$FOUNDRY_PASSWORD
      - FOUNDRY_USERNAME=$FOUNDRY_USERNAME
      - CONTAINER_PRESERVE_CONFIG=true
      - FOUNDRY_HOSTNAME=kirkwall.$DOMAIN
      - FOUNDRY_IP_DISCOVERY=false
      - FOUNDRY_MINIFY_STATIC_FILES=true
      - FOUNDRY_PROXY_SSL=true

  foundry-afterstory:
    image: felddy/foundryvtt:release
    container_name: foundry-afterstory
    hostname: foundry-afterstory
    restart: unless-stopped
    networks:
      - wasabi-overlay
    expose:
      - 30000
    volumes:
      - $OPDIR/afterstory:/data
    labels:
      - traefik.enable=true
      - traefik.http.routers.afterstory.entrypoints=websecure
      - traefik.http.routers.afterstory.rule=Host(`afterstory.$DOMAIN`)
    environment:
      - TIMEZONE=$TZ
      - FOUNDRY_UID=$PUID
      - FOUNDRY_GID=$PGID
      - FOUNDRY_PASSWORD=$FOUNDRY_PASSWORD
      - FOUNDRY_USERNAME=$FOUNDRY_USERNAME
      - CONTAINER_PRESERVE_CONFIG=true
      - FOUNDRY_HOSTNAME=afterstory.$DOMAIN
      - FOUNDRY_IP_DISCOVERY=false
      - FOUNDRY_MINIFY_STATIC_FILES=true
      - FOUNDRY_PROXY_SSL=true

  # Media
  tautulli:
    image: lscr.io/linuxserver/tautulli
    container_name: tautulli
    hostname: tautulli
    restart: unless-stopped
    networks:
      - wasabi-overlay
    expose:
      - 8181
    volumes:
      - $OPDIR/tautulli:/config
    labels:
      - traefik.enable=true
      - traefik.http.routers.tautulli.entrypoints=websecure
      - traefik.http.routers.tautulli.rule=Host(`tautulli.$DOMAIN`)
    environment:
      - TZ=$TZ
      - PUID=$PUID
      - PGID=$PGID

  overseerr:
    image: sctx/overseerr
    container_name: overseerr
    hostname: overseerr
    restart: unless-stopped
    networks:
      - wasabi-overlay
    expose:
      - 5055
    volumes:
      - $OPDIR/overseerr:/app/config
    labels:
      - traefik.enable=true
      - traefik.http.routers.overseerr.entrypoints=websecure
      - traefik.http.routers.overseerr.rule=Host(`requests.$DOMAIN`)
    environment:
      - TZ=$TZ
      - PUID=$PUID
      - PGID=$PGID

  # Other
  code-server:
    image: lscr.io/linuxserver/code-server
    container_name: code-server
    hostname: code-server
    restart: unless-stopped
    networks:
      - wasabi-overlay
    expose:
      - 8443
    volumes:
      - $OPDIR/code:/config
      - $OPDIR:/opt
    labels:
      - traefik.enable=true
      - traefik.http.routers.code-server.entrypoints=websecure
      - traefik.http.routers.code-server.rule=Host(`cood.$DOMAIN`)
      - traefik.http.routers.code-server.middlewares=authelia@file
    environment:
      - TZ=$TZ
      - PUID=$PUID
      - PGID=$PGID

  jupyter:
    image: jupyter/datascience-notebook
    container_name: jupyter
    hostname: jupyter
    restart: unless-stopped
    networks:
      - wasabi-overlay
    expose:
      - 8888
    volumes:
      - $OPDIR/jupyter:/home/joyvan
      - $OPDIR/nginx/www/jupyter:/home/joyvan/www
    labels:
      - traefik.enable=true
      - traefik.http.routers.jupyter.entrypoints=websecure
      - traefik.http.routers.jupyter.rule=Host(`jupyter.$DOMAIN`)
      - traefik.http.routers.jupyter.middlewares=authelia@file
    environment:
      - TZ=$TZ
      - PUID=$PUID
      - PGID=$PGID
      - JUPYTER_ENABLE_LAB=yes

  heimdall:
    image: lscr.io/linuxserver/heimdall
    container_name: heimdall
    hostname: heimdall
    restart: unless-stopped
    networks:
      - wasabi-overlay
    volumes:
      - $OPDIR/heimdall:/config
    labels:
      - traefik.enable=true
      - traefik.http.routers.heimdall.entrypoints=websecure
      - traefik.http.routers.heimdall.rule=Host(`heimdall.$DOMAIN`)
      - traefik.http.routers.heimdall.middlewares=authelia@file
    environment:
      - TZ=$TZ
      - PUID=$PUID
      - PGID=$PGID
